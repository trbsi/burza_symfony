<?php

/*
 * This file is part of PHP CS Fixer.
 *
 * (c) Fabien Potencier <fabien@symfony.com>
 *     Dariusz Rumi≈Ñski <dariusz.ruminski@gmail.com>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace TweetProxyBundle\Repository;

/**
 * UserRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllPagination()
    {
        return $this->createQueryBuilder('t');
    }

    public function findAllCustom()
    {
        return $this->createQueryBuilder('t')
            ->orderBy('t.username', 'ASC')
            ->getQuery()
            ->getResult();
    }

    public function findAllWithTweets()
    {
        return $this->createQueryBuilder('userAlias')
            ->select('userAlias.id, userAlias.username, MAX(p.tweetId) AS tweetId')
            // ->from('TweetProxyBundle:Tweets', 'tweetAlias')
            ->leftJoin('TweetProxyBundle:Tweets', 'p', 'WITH', 'p.userId = userAlias.id')
            ->groupBy('userAlias.id')
            ->getQuery()
            ->getResult();
    }

    public function findByUsername($username)
    {
        $query = $this->createQueryBuilder('t')
            ->where('t.username = :username')
            ->setParameter('username', $username)
            ->getQuery();

        return $query->getOneOrNullResult();
    }
}
